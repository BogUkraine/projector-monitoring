version: '3.6'
services:
  telegraf:
    container_name: telegraf
    user: telegraf:1001
    image: telegraf:1.31.2-alpine
    ports:
    - '127.0.0.1:8125:8125/udp'
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - ./telegraf/etc/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    depends_on:
      - influxdb
    links:
      - influxdb
    privileged: true

  influxdb:
    container_name: influxdb
    image: influxdb:1.8.10
    env_file: configuration.env
    ports:
      - '127.0.0.1:8086:8086'
    volumes:
      - ./:/imports
      - influxdb_data:/var/lib/influxdb

  grafana:
    container_name: grafana
    image: grafana/grafana:10.0.0-ubuntu
    env_file: configuration.env
    links:
      - influxdb
    expose:
      - '3000'
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/dashboards/:/var/lib/grafana/dashboards/
    depends_on:
      - influxdb

  mongodb:
    container_name: mongodb
    image: mongo:8.0.0-rc8
    env_file: configuration.env
    ports:
      - "127.0.0.1:27017:27017"
    volumes:
      - mongo_data:/data/db
    depends_on:
      - telegraf

  nginx:
    container_name: nginx
    image: nginx:alpine3.19
    env_file: configuration.env
    ports:
      - "127.0.0.1:8080:8080"
      - "127.0.0.1:3000:3000"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - telegraf
      - backend
      - grafana

  backend:
    container_name: backend
    build: ./backend
    expose:
      - "8000"
    environment:
      MONGODB_URI: mongodb://mongodb:27017
      ELASTICSEARCH_NODE: http://es01:9200
    depends_on:
      - telegraf
      - mongodb
      - elasticsearch_01
      - elasticsearch_02
      - elasticsearch_03

  elasticsearch_01:
    image: elasticsearch:8.14.3
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - network.host=0.0.0.0
      - discovery.seed_hosts=es02,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      - cluster.routing.allocation.disk.threshold_enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - es_data1:/usr/share/elasticsearch/data
    depends_on:
      - telegraf

  elasticsearch_02:
    image: elasticsearch:8.14.3
    container_name: es02
    environment:
      - node.name=es02
      - cluster.name=es-docker-cluster
      - network.host=0.0.0.0
      - discovery.seed_hosts=es01,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      - cluster.routing.allocation.disk.threshold_enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es_data2:/usr/share/elasticsearch/data
    depends_on:
      - telegraf

  elasticsearch_03:
    image: elasticsearch:8.14.3
    container_name: es03
    environment:
      - node.name=es03
      - cluster.name=es-docker-cluster
      - network.host=0.0.0.0
      - discovery.seed_hosts=es01,es02
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      - cluster.routing.allocation.disk.threshold_enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es_data3:/usr/share/elasticsearch/data
    depends_on:
      - telegraf


volumes:
  grafana_data: {}
  influxdb_data: {}
  mongo_data: {}
  es_data1: {}
  es_data2: {}
  es_data3: {}